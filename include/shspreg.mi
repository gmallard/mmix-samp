// Code
8H        IS    @
//
// GETA Branch table
          LOC   8B
          LOC   @+(4-@)&3 // TETRA Align
GETABRTAB IS    @
          GET   $0,rA        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rB        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rC        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rD        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rE        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rF        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rG        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rH        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rI        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rJ        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rK        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rL        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rM        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rN        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rO        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rP        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rQ        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rR        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rS        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rT        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rU        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rV        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rW        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rX        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rY        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rZ        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rBB        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rTT        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rWW        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rXX        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rYY        // Get special register value
          POP   1,0          // Return 1 register
          GET   $0,rZZ        // Get special register value
          POP   1,0          // Return 1 register
8H        IS    @
          LOC    8B
// -------------------------------------------------------------------
osreg     IS     $255          
// -------------------------------------------------------------------
SHSPREGS  IS     @
          SET    $16,#cafe
          SET    $17,#babe
          SET    $18,#bad1
          GET    $8,rJ               // Return address
          LDOU   $12,LOWNYBS         // Load Low Nyble Mask
          LDA    $11,HEXTRTABL       // Point to XLATE table
          LDA    $15,SPREGDAT        // Adress of register addresses
          SETL   $14,SPGREGLN        // Count of addresses
          GETA   $9,GETABRTAB        // Point to GET table
0H        IS     @ 
          LDOU   $13,$15             // Get Address of Reg Data

//
//          LDWU   $9,$13,0            // Get special register number
//          GETA   $10,GETREG          // Load address
//          STWU   $9,$10,2            // Save Reg number
//GETREG    GET    $0,rS               // Pattern GET

          PUSHGO $16,$9,0            // Get the register value
          SET    $1,$17              // Copy value
          SET    $2,$17              // Copy Again
          SRU    $2,$2,4             // Hi Order Nyb -> Low Order
// Isolate the nybles
          AND    $1,$1,$12           // And out Data (get LowNybs)
          AND    $2,$2,$12           // And out Data (get HiNybs)
          ADDU   $3,$13,SRADDRO      // Point to start of area
          SETL   $6,8                // Loop count
          LDOU   $10,BYTELODMS       // Byte 0 mask
1H        IS     @
          MOR    $4,$2,$10           // Get next input nyble
          LDBU   $5,$11,$4           // Get next byte
          STBU   $5,$3               // Put it in output
          ADDU   $3,$3,1             // Incr output location
//
          MOR    $4,$1,$10           // Get next input nyble
          LDBU   $5,$11,$4           // Get next byte
          STBU   $5,$3               // Put it in output
          ADDU   $3,$3,1             // Incr output location
//
          SRU    $10,$10,1           // Shift for next byte mask
          SUBU   $6,$6,1             // Decr loop count
          PBP    $6,1B               // Loop for all bytes
          //
          ADDU   osreg,$13,SRVNAME   // Point to text area
          TRAP   0,Fputs,StdOut      // Write it
// Loop end
          ADDU   $15,$15,8           // Point to next pointer
          ADDU   $9,$9,8             // Next branch table entry
          SUBU   $14,$14,1           // Decrement Reg Data Count
          PBP    $14,0B              // Loop for all regs
// Return to caller
          PUT   rJ,$8                // Set Ret Addr
          POP   0,0
