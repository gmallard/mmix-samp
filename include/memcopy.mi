// -------------------------------------------------------------------
// Memory Copy Utilities
// -------------------------------------------------------------------
          LOC   8B
          LOC    @+(4-@)&3           // TETRA Align
MemCpyByt IS    @
// Copy memory, byte-by-byte.
//
// $0 => Parms Address
// +0 - From Address
// +8 - To Address
// +16 - Byte Count (an OCTA)
          LDOU  $1,$0              // From Address
          LDOU  $2,$0,8            // To Address
          LDOU  $3,$0,16           // Length (in bytes)
0H        LDBU  $4,$1,0            // Get From Byte
          STBU  $4,$2,0            // Store it
          ADDU  $1,$1,1            // Increment From Addr
          ADDU  $2,$2,1            // Increment To Addr
          SUBU  $3,$3,1            // Decrement byte count
          PBP   $3,0B              // Loop for all
          POP   0,0                // Return
8H        IS    @
// -------------------------------------------------------------------
          LOC   8B
          LOC    @+(4-@)&3           // TETRA Align
MemCpyWyd IS    @
// Copy memory, wyde-by-wyde.
//
// $0 => Parms Address
// +0 - From Address
// +8 - To Address
// +16 - Wyde Count (an OCTA)
          LDOU  $1,$0              // From Address
          LDOU  $2,$0,8            // To Address
          LDOU  $3,$0,16           // Length (in wydes)
0H        LDWU  $4,$1,0            // Get From Wyde
          STWU  $4,$2,0            // Store it
          ADDU  $1,$1,2            // Increment From Addr
          ADDU  $2,$2,2            // Increment To Addr
          SUBU  $3,$3,1            // Decrement wyde count
          PBP   $3,0B              // Loop for all
          POP   0,0                // Return
8H        IS    @
// -------------------------------------------------------------------
          LOC   8B
          LOC    @+(4-@)&3           // TETRA Align
MemCpyTet IS    @
// Copy memory, tetra-by-tetra.
//
// $0 => Parms Address
// +0 - From Address
// +8 - To Address
// +16 - Tetra Count (an OCTA)
          LDOU  $1,$0              // From Address
          LDOU  $2,$0,8            // To Address
          LDOU  $3,$0,16           // Length (in tetras)
0H        LDTU  $4,$1,0            // Get From tetra
          STTU  $4,$2,0            // Store it
          ADDU  $1,$1,4            // Increment From Addr
          ADDU  $2,$2,4            // Increment To Addr
          SUBU  $3,$3,1            // Decrement tetra count
          PBP   $3,0B              // Loop for all
          POP   0,0                // Return
8H        IS    @
// -------------------------------------------------------------------
          LOC   8B
          LOC    @+(4-@)&3           // TETRA Align
MemCpyOct IS    @
// Copy memory, octa-by-octa.
//
// $0 => Parms Address
// +0 - From Address
// +8 - To Address
// +16 - Octa Count (an OCTA)
          LDOU  $1,$0              // From Address
          LDOU  $2,$0,8            // To Address
          LDOU  $3,$0,16           // Length (in tetras)
0H        LDOU  $4,$1,0            // Get From tetra
          STOU  $4,$2,0            // Store it
          ADDU  $1,$1,8            // Increment From Addr
          ADDU  $2,$2,8            // Increment To Addr
          SUBU  $3,$3,1            // Decrement tetra count
          PBP   $3,0B              // Loop for all
          POP   0,0                // Return
8H        IS    @

